[{"/Users/jacktseng/Desktop/AppWorks/personal-project/src/index.js":"1","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/AppHeader/AppHeader.jsx":"2","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/SearchBar/SearchBar.jsx":"3","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/app/App.jsx":"4","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/appHeader/AppHeader.jsx":"5","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/pageHeader/PageHeader.jsx":"6","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/videoList/VideoList.jsx":"7","/Users/jacktseng/Desktop/AppWorks/personal-project/src/api/youtube.js":"8","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/videoCard/VideoCard.jsx":"9","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/searchBar/SearchBar.jsx":"10","/Users/jacktseng/Desktop/AppWorks/personal-project/src/firebase.js":"11","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/partyRoom/PartyRoom.jsx":"12","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/chatBox/ChatBox.jsx":"13","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/chatMessage/ChatMessage.jsx":"14","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/inputBox/InputBox.jsx":"15","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/videoPlayer/VideoPlayer.jsx":"16","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/modalForm/ModalForm.jsx":"17","/Users/jacktseng/Desktop/AppWorks/personal-project/src/util/modal.js":"18","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/oldUserForm/OldUserForm.jsx":"19","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/userRoom/UserRoom.jsx":"20","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/userRoomCard/UserRoomCard.jsx":"21","/Users/jacktseng/Desktop/AppWorks/personal-project/src/util/localStorage.js":"22","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/activeRoom/ActiveRoom.jsx":"23","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/getUserNameForm/GetUserNameForm.jsx":"24"},{"size":276,"mtime":1607483615351,"results":"25","hashOfConfig":"26"},{"size":301,"mtime":1607407797195,"results":"27","hashOfConfig":"26"},{"size":535,"mtime":1607409295935,"results":"28","hashOfConfig":"26"},{"size":3821,"mtime":1608609452263,"results":"29","hashOfConfig":"26"},{"size":1371,"mtime":1608544259619,"results":"30","hashOfConfig":"26"},{"size":354,"mtime":1607410119237,"results":"31","hashOfConfig":"26"},{"size":697,"mtime":1608608790119,"results":"32","hashOfConfig":"26"},{"size":1107,"mtime":1608544962548,"results":"33","hashOfConfig":"26"},{"size":707,"mtime":1608608814730,"results":"34","hashOfConfig":"26"},{"size":1775,"mtime":1608544710752,"results":"35","hashOfConfig":"26"},{"size":904,"mtime":1608258397270,"results":"36","hashOfConfig":"26"},{"size":3442,"mtime":1608606292953,"results":"37","hashOfConfig":"26"},{"size":1190,"mtime":1608270038640,"results":"38","hashOfConfig":"26"},{"size":420,"mtime":1608475909718,"results":"39","hashOfConfig":"26"},{"size":1178,"mtime":1608609206055,"results":"40","hashOfConfig":"26"},{"size":4918,"mtime":1608606667532,"results":"41","hashOfConfig":"26"},{"size":3616,"mtime":1608608896760,"results":"42","hashOfConfig":"26"},{"size":400,"mtime":1608013552818,"results":"43","hashOfConfig":"26"},{"size":575,"mtime":1608103599320,"results":"44","hashOfConfig":"26"},{"size":1260,"mtime":1608517485031,"results":"45","hashOfConfig":"26"},{"size":668,"mtime":1608103865984,"results":"46","hashOfConfig":"26"},{"size":217,"mtime":1608258709171,"results":"47","hashOfConfig":"26"},{"size":2566,"mtime":1608608275054,"results":"48","hashOfConfig":"26"},{"size":1106,"mtime":1608607612996,"results":"49","hashOfConfig":"26"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},"1yjb978",{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"52"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"52"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"52"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"52"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"52"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"52"},"/Users/jacktseng/Desktop/AppWorks/personal-project/src/index.js",[],["107","108"],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/AppHeader/AppHeader.jsx",[],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/SearchBar/SearchBar.jsx",[],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/app/App.jsx",[],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/appHeader/AppHeader.jsx",[],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/pageHeader/PageHeader.jsx",[],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/videoList/VideoList.jsx",[],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/api/youtube.js",[],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/videoCard/VideoCard.jsx",[],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/searchBar/SearchBar.jsx",["109"],"import { useState } from 'react';\nimport './SearchBar.scss';\nimport { IoSearchCircleSharp } from 'react-icons/io5';\nimport { suggest } from '../../api/youtube';\n\nfunction SearchBar({ query, setQuery, searchYoutube }) {\n  const [value, setValue] = useState('');\n  const [suggestions, setSuggestions] = useState(null);\n\n  const handleChange = (e) => {\n    onTypeSuggest(e.target.value);\n    setValue(e.target.value);\n  };\n\n  const onTypeSuggest = async (queryString) => {\n    if (queryString.length < 5) {\n      return null;\n    }\n    const list = await suggest(queryString);\n    return setSuggestions(list);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setQuery(value);\n    setValue('');\n  };\n\n  const onSearch = async (queryString) => {\n    const results = await searchYoutube(queryString);\n    setValue('');\n    setSuggestions(null);\n\n    console.log(results);\n  };\n\n  return (\n    <>\n      <form className='search-bar' onSubmit={handleSubmit}>\n        <div className='input-container'>\n          {/* <IoSearchCircleSharp className='search-icon' size={30} /> */}\n          <input type='search' value={value} onChange={handleChange} placeholder='Search...' />\n          <Suggestions onSearch={onSearch} items={suggestions} />\n        </div>\n      </form>\n    </>\n  );\n}\n\nfunction Suggestions({ onSearch, items }) {\n  if (!items || !items.length) {\n    return null;\n  }\n  return (\n    <section className='section'>\n      {' '}\n      {items.map((item, key) => {\n        return <SuggestionRow onSearch={onSearch} key={key} text={item} />;\n      })}\n    </section>\n  );\n}\n\nfunction SuggestionRow({ onSearch, text }) {\n  return (\n    <span className='suggestion-span' onClick={() => onSearch(text)}>\n      {text}\n    </span>\n  );\n}\n\nexport default SearchBar;\n","/Users/jacktseng/Desktop/AppWorks/personal-project/src/firebase.js",[],["110","111"],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/partyRoom/PartyRoom.jsx",["112"],"import React, { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport './PartyRoom.scss';\nimport firebase, { db } from '../../firebase';\nimport { getUserData } from '../../util/localStorage';\nimport ChatBox from '../chatBox/ChatBox';\nimport VideoPlayer from '../videoPlayer/VideoPlayer';\nimport { HiShare } from 'react-icons/hi';\n\nfunction Room() {\n  const [videoId, setVideoId] = useState('');\n  const [showNotification, setShowNotification] = useState(false);\n  const [activeUser, setActiveUser] = useState();\n\n  const { roomId } = useParams();\n  const ref = db.collection('partyroom').doc(roomId);\n  const activeUserRef = ref.collection('activeUser');\n  let youtubeURL = 'https://www.youtube.com/watch?v=';\n  let videoURL = `${youtubeURL}${videoId}`;\n  const { userId, userName } = getUserData();\n\n  // console.log('roomId', roomId);\n\n  useEffect(() => {\n    ref.get().then((doc) => {\n      // console.log(doc.data());\n      setVideoId(doc.data().videoId);\n      // setActiveUser(doc.data().activeUser);\n    });\n\n    // activeUserRef.onSnapshot();\n\n    ref.update({\n      activeUser: firebase.firestore.FieldValue.arrayUnion(userId),\n    });\n\n    activeUserRef.doc(userId).set({\n      userId,\n      userName,\n    });\n\n    monitorActiveUsers();\n\n    const updateUserStatus = () => {\n      activeUserRef.doc(userId).delete();\n      ref.update({\n        activeUser: firebase.firestore.FieldValue.arrayRemove(userId),\n      });\n    };\n\n    window.addEventListener('beforeunload', updateUserStatus);\n\n    return () => {\n      updateUserStatus();\n      window.removeEventListener('beforeunload', updateUserStatus);\n    };\n  }, []);\n  console.log('user id:', userId);\n  // console.log('active users:', activeUser);\n\n  const monitorActiveUsers = () => {\n    const unsubscribe = activeUserRef.onSnapshot((snap) => {\n      const data = snap.docs.map((doc) => doc.data());\n      console.log('Current data: ', data);\n      setActiveUser(data);\n    });\n    return () => unsubscribe();\n  };\n  console.log('active users:', activeUser);\n\n  const copyURL = () => {\n    const URL = window.location.href;\n    textToClipboard(URL);\n    setShowNotification(true);\n    setTimeout(() => {\n      setShowNotification(false);\n    }, 3000);\n  };\n\n  const textToClipboard = (text) => {\n    let dummy = document.createElement('textarea');\n    document.body.appendChild(dummy);\n    dummy.value = text;\n    dummy.select();\n    document.execCommand('copy');\n    document.body.removeChild(dummy);\n  };\n\n  return (\n    <>\n      {/* <div className='info-box'>\n        <h2>Welcome to the room!</h2>\n        <div className='info-card info-card1'>Bruno Mars</div>\n      </div> */}\n      <main className='PartyRoom'>\n        <div className='share-link'>\n          <p>Click the icon to invite your friends</p>\n          <HiShare className='share-icon' size={20} onClick={copyURL} />\n          {showNotification && <div className='notification'>Copied link!</div>}\n        </div>\n        <div className='active-users'>\n          <h3 className='title'>Users in the room</h3>\n          {activeUser &&\n            activeUser.length &&\n            activeUser.map((user) => <div className='user-name'>{user.userName}</div>)}\n        </div>\n        {/* <h3>Party room id: {roomId}</h3> */}\n        {videoId && <VideoPlayer videoURL={videoURL} roomId={roomId} />}\n\n        <ChatBox roomId={roomId} />\n      </main>\n    </>\n  );\n}\n\nexport default Room;\n","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/chatBox/ChatBox.jsx",["113"],"import React, { useState, useEffect } from 'react';\nimport './ChatBox.scss';\nimport firebase from '../../firebase';\nimport ChatMessage from '../chatMessage/ChatMessage';\nimport InputBox from '../inputBox/InputBox';\n\nfunction ChatBox({ roomId }) {\n  const [messages, setMessages] = useState(null);\n\n  const db = firebase.firestore();\n  const roomRef = db.collection('partyroom').doc(roomId);\n  const messagesRef = roomRef.collection('messages');\n\n  useEffect(() => {\n    renderMessages();\n    return () => {\n      setMessages(null);\n    };\n  }, []);\n\n  const renderMessages = () => {\n    const unsubscribe = messagesRef.orderBy('timeSent').onSnapshot((snap) => {\n      const data = snap.docs.map((doc) => doc.data());\n      console.log('Current data: ', data);\n      setMessages(data);\n    });\n    return () => unsubscribe();\n  };\n\n  return (\n    <div className='ChatBox'>\n      <h3>Chat box</h3>\n      {/* <p className='room-id'>roomId: {roomId}</p> */}\n      <div className='messages'>\n        {messages &&\n          messages.map((message, index) => <ChatMessage message={message} key={index} />)}\n      </div>\n      <InputBox roomId={roomId} />\n    </div>\n  );\n}\n\nexport default ChatBox;\n",["114","115"],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/chatMessage/ChatMessage.jsx",[],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/inputBox/InputBox.jsx",[],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/videoPlayer/VideoPlayer.jsx",["116","117"],"import React, { useState, useEffect, useRef } from 'react';\nimport ReactPlayer from 'react-player/lazy';\nimport './VideoPlayer.scss';\nimport firebase from '../../firebase';\n\nfunction VideoPlayer({ videoURL, roomId }) {\n  const [playing, setPlaying] = useState(false);\n  const [playingTime, setPlayingTime] = useState(0);\n  const videoRef = useRef(null);\n  const db = firebase.firestore();\n  const docRef = db.collection('partyroom').doc(roomId);\n\n  const updateFirestore = (time) => {\n    docRef.update({\n      playingTime: time,\n    });\n  };\n\n  const monitorFirestore = async () => {\n    await docRef.onSnapshot((doc) => {\n      // console.log('playing', playing);\n      const playingStatus = doc?.data()?.playing;\n      // console.log('playingStatus', playingStatus);\n\n      if (typeof videoRef?.current?.getInternalPlayer()?.pauseVideo !== 'function') {\n        return;\n      }\n      videoRef.current.seekTo(doc?.data()?.playingTime);\n\n      if (playingStatus) {\n        videoRef.current.getInternalPlayer().playVideo();\n      } else {\n        videoRef.current.getInternalPlayer().pauseVideo();\n      }\n\n      // console.log('\\n');\n    });\n  };\n\n  const handleOnProgress = (state) => {\n    // console.log('onProgress callback');\n    // console.log(videoRef.current.getCurrentTime());\n    setPlayingTime((prevState) => {\n      // console.log('Difference', Math.abs(state.playedSeconds - prevState));\n      if (Math.abs(state.playedSeconds - prevState) > 2) {\n        // console.log('playing', playing);\n        updateFirestore(state.playedSeconds);\n        // if (playing) {\n        //   videoRef.current.getInternalPlayer().playVideo();\n        //   docRef.update({\n        //     paused: false,\n        //   });\n        // }\n        // docRef.update({\n        //   // playingTime: videoRef.current.getCurrentTime(),\n        //   playingTime: state.playedSeconds,\n        // });\n      }\n      // console.log('prevState', prevState);\n      // console.log('newState', state.playedSeconds);\n      // console.log('\\n');\n      return state.playedSeconds;\n    });\n  };\n\n  useEffect(() => {\n    monitorFirestore();\n\n    // const updatePlayingTime = () => {\n    //   docRef.update({\n    //     playingTime,\n    //   });\n    // };\n\n    // window.addEventListener('beforeunload', updatePlayingTime);\n\n    // return () => {\n    //   updatePlayingTime();\n    //   window.removeEventListener('beforeunload', updatePlayingTime);\n    // };\n  }, []);\n\n  // console.log('playing time', playingTime);\n\n  return (\n    <>\n      <div className='VideoPlayer'>\n        <ReactPlayer\n          playing={true}\n          ref={videoRef}\n          className='react-player'\n          url={`${videoURL}`}\n          controls\n          width='100%'\n          height='100%'\n          onReady={() => {\n            console.log('onReady callback');\n            console.log('someone joined the room!');\n            console.log('\\n');\n          }}\n          onStart={() => {\n            console.log('onStart callback');\n            console.log('\\n');\n          }}\n          onPlay={() => {\n            setPlaying(true);\n\n            // setPlaying((prevState) => {\n            //   console.log('prevState', prevState);\n            docRef.update({\n              playing: true,\n            });\n\n            //   return true;\n            // });\n            // console.log('newState', true);\n\n            console.log('onPlay callback');\n            console.log('\\n');\n          }}\n          onPause={() => {\n            setPlaying(false);\n\n            console.log('playing', playing);\n\n            docRef.update({\n              playing: false,\n              playingTime: videoRef.current.getCurrentTime(),\n            });\n            console.log('onPause callback');\n            console.log('\\n');\n          }}\n          // onEnded={() => {\n          //   console.log('onEnded callback');\n          // }}\n          // onError={() => {\n          //   console.log('onReady callback');\n          // }}\n          onProgress={\n            handleOnProgress\n            // () => {\n            //   console.log('onProgress callback');\n            //   console.log('\\n');\n            // }\n          }\n          // onDuration={(state) => {\n          //   console.log(state);\n          // }}\n          // onSeek={(e) => {\n          //   console.log('onseek', e);\n          // }}\n          onBuffer={() => {\n            // setPlaying((prevState) => {\n            //   return true;\n            // });\n            // docRef.update({\n            //   playing: true,\n            //   playingTime: videoRef.current.getCurrentTime(),\n            // });\n            // console.log('onBuffer playback');\n            //   console.log('playing', playing);\n            //   console.log('\\n');\n          }}\n        />\n      </div>\n      {/* <button onClick={handlePause}>Pause</button>\n      <button onClick={handlePlay}>Play</button> */}\n    </>\n  );\n}\n\nexport default VideoPlayer;\n","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/modalForm/ModalForm.jsx",[],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/util/modal.js",[],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/oldUserForm/OldUserForm.jsx",[],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/userRoom/UserRoom.jsx",[],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/userRoomCard/UserRoomCard.jsx",[],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/util/localStorage.js",[],"/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/activeRoom/ActiveRoom.jsx",["118"],"import React, { useState, useRef, useEffect } from 'react';\nimport './ActiveRoom.scss';\nimport { useHistory } from 'react-router-dom';\nimport { nanoid } from 'nanoid';\nimport { getUserData } from '../../util/localStorage';\n// import firebase, { roomRef } from '../../firebase';\n\nfunction ActiveRoom({ room, setUserData }) {\n  const history = useHistory();\n  const [userId] = useState(nanoid(10));\n  const [userName, setUserName] = useState('');\n  const [showForm, setShowForm] = useState(false);\n  const [localRepo, setLocalRepo] = useState(null);\n  const inputRef = useRef();\n\n  useEffect(() => {\n    if (showForm) inputRef.current.focus();\n\n    const repository = localStorage.getItem('partyroom');\n\n    if (repository) {\n      setLocalRepo(JSON.parse(repository));\n      return;\n    }\n  }, [showForm]);\n\n  const handleClick = () => {\n    if (localRepo) {\n      history.push(`/partyroom/${room.roomId}`);\n    }\n    setShowForm(true);\n  };\n\n  const handleChange = (e) => {\n    setUserName(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('Clicked on form!', userName);\n    updateLocalStorage(userName);\n    history.push(`/partyroom/${room.roomId}`);\n  };\n\n  const updateLocalStorage = (userName) => {\n    const data = {\n      userId,\n      userName,\n    };\n    localStorage.setItem('partyroom', JSON.stringify(data));\n    setUserData(data);\n  };\n\n  // console.log('----->room:', room);\n  return (\n    <>\n      <div className='active-room' onClick={handleClick}>\n        {/* <div className='active-rooms'> */}\n        {/* <div className='room'> */}\n        <div className='room-img'>\n          <img src={room.image} alt={room.title} />\n        </div>\n        <div className='room-video'>{room.title}</div>\n        <div className='user-number'>active users: {room.activeUser.length}</div>\n        <div className='host'>host: {room.userName}</div>\n\n        {/* </div> */}\n        {/* </div> */}\n      </div>\n      {showForm && (\n        <div className='GuestForm'>\n          <div\n            className='guestform-cover'\n            onClick={() => {\n              setShowForm(false);\n            }}></div>\n          <form className='form' onSubmit={handleSubmit}>\n            <h2>Please enter your name to join the room</h2>\n            <input\n              value={userName}\n              onChange={handleChange}\n              ref={inputRef}\n              className='input-field'\n              placeholder='Type your name'\n            />\n          </form>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default ActiveRoom;\n","/Users/jacktseng/Desktop/AppWorks/personal-project/src/components/getUserNameForm/GetUserNameForm.jsx",["119"],"import React, { useState } from 'react';\nimport './GetUserNameForm.scss';\nimport { nanoid } from 'nanoid';\n\nfunction GetUserNameForm({ setUserData }) {\n  const [userName, setUserName] = useState('');\n  const [userId, setUserId] = useState(nanoid(10));\n\n  const handleChange = (e) => {\n    setUserName(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    console.log('Clicked on form!', userName);\n    updateLocalStorage(userName);\n    setUserData({ userName, userId });\n  };\n\n  const updateLocalStorage = (userName) => {\n    const data = {\n      userId,\n      userName,\n    };\n    localStorage.setItem('partyroom', JSON.stringify(data));\n  };\n\n  return (\n    <>\n      <div className='GuestForm GetUserNameForm'>\n        <form className='form' onSubmit={handleSubmit}>\n          <h2>Please enter your name to join the room</h2>\n          <input\n            value={userName}\n            onChange={handleChange}\n            className='input-field'\n            placeholder='Type your name'\n          />\n        </form>\n      </div>\n    </>\n  );\n}\n\nexport default GetUserNameForm;\n",{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"124","severity":1,"message":"125","line":3,"column":10,"nodeType":"126","messageId":"127","endLine":3,"endColumn":29},{"ruleId":"120","replacedBy":"128"},{"ruleId":"122","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":57,"column":6,"nodeType":"132","endLine":57,"endColumn":8,"suggestions":"133"},{"ruleId":"130","severity":1,"message":"134","line":19,"column":6,"nodeType":"132","endLine":19,"endColumn":8,"suggestions":"135"},{"ruleId":"120","replacedBy":"136"},{"ruleId":"122","replacedBy":"137"},{"ruleId":"124","severity":1,"message":"138","line":8,"column":10,"nodeType":"126","messageId":"127","endLine":8,"endColumn":21},{"ruleId":"130","severity":1,"message":"139","line":81,"column":6,"nodeType":"132","endLine":81,"endColumn":8,"suggestions":"140"},{"ruleId":"124","severity":1,"message":"141","line":5,"column":10,"nodeType":"126","messageId":"127","endLine":5,"endColumn":21},{"ruleId":"124","severity":1,"message":"142","line":7,"column":18,"nodeType":"126","messageId":"127","endLine":7,"endColumn":27},"no-native-reassign",["143"],"no-negated-in-lhs",["144"],"no-unused-vars","'IoSearchCircleSharp' is defined but never used.","Identifier","unusedVar",["143"],["144"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'activeUserRef', 'monitorActiveUsers', 'ref', 'userId', and 'userName'. Either include them or remove the dependency array.","ArrayExpression",["145"],"React Hook useEffect has a missing dependency: 'renderMessages'. Either include it or remove the dependency array.",["146"],["143"],["144"],"'playingTime' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'monitorFirestore'. Either include it or remove the dependency array.",["147"],"'getUserData' is defined but never used.","'setUserId' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},{"desc":"152","fix":"153"},"Update the dependencies array to be: [activeUserRef, monitorActiveUsers, ref, userId, userName]",{"range":"154","text":"155"},"Update the dependencies array to be: [renderMessages]",{"range":"156","text":"157"},"Update the dependencies array to be: [monitorFirestore]",{"range":"158","text":"159"},[1659,1661],"[activeUserRef, monitorActiveUsers, ref, userId, userName]",[544,546],"[renderMessages]",[2433,2435],"[monitorFirestore]"]